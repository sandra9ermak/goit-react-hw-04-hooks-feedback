{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Statistics/Statistics.module.css","components/Statistics/Statistics.jsx","components/Feedback/FeedbackOptions.jsx","components/Title/Title.jsx","components/Notification/Notification.jsx","App/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","liItem","FeedbackOptions","onLeaveFeedback","name","map","itemName","id","type","onClick","button","Title","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","section","container","event","prevState","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,UAAY,4BAA4B,MAAQ,wBAAwB,OAAS,yBAAyB,QAAU,4B,gBCA1KD,EAAOC,QAAU,CAAC,OAAS,6B,0JCsBZC,EApBI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACI,8BACE,+BACE,qBAAIC,UAAWC,IAAOC,OAAtB,mBAAqCP,KACrC,qBAAIK,UAAWC,IAAOC,OAAtB,sBAAwCN,KACxC,qBAAII,UAAWC,IAAOC,OAAtB,kBAAoCL,KACpC,qBAAIG,UAAWC,IAAOC,OAAtB,oBAAsCJ,KACtC,qBAAIE,UAAWC,IAAOC,OAAtB,gCAAkDH,W,gBCF7CI,EAZS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,gBAAiBC,EAAU,EAAVA,KACxC,OACE,8BACGA,EAAKC,KAAI,SAACC,EAAUC,GAAX,OACR,wBAAiBC,KAAK,SAASC,QAAS,kBAAMN,EAAgBG,IAAWP,UAAWC,IAAOU,OAA3F,SACGJ,GADUC,SCKRI,EATD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACpB,OACI,gCACA,oBAAId,UAAWC,IAAOY,MAAtB,SAA8BA,IACzBC,MCEEC,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,mBAAGhB,UAAWC,IAAOe,QAArB,SAA+BA,KCyDxBC,EAtDI,WACjB,MAAwBC,mBAAS,GAAjC,mBAAOvB,EAAP,KAAawB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBwB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOrB,EAAP,KAAYwB,EAAZ,KAkBMC,EAAqB,WACzB,OAAO3B,EAAOC,EAAUC,GAK1B,OACE,yBAASG,UAAWC,IAAOsB,QAA3B,SACE,sBAAKvB,UAAWC,IAAOuB,UAAvB,UACE,cAAC,EAAD,CAAOX,MAAM,wBAAb,SACE,cAAC,EAAD,CACET,gBA1Ba,SAACqB,GACtB,OAAQA,GACN,IAAK,OACHN,GAAQ,SAACO,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHN,GAAW,SAACM,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHL,GAAO,SAACK,GAAD,OAAeA,EAAY,KAClC,MACF,QACE,SAeIrB,KA7BI,CAAC,OAAQ,UAAW,WAgC5B,cAAC,EAAD,CAAOQ,MAAM,aAAb,SACGS,IAAuB,EACtB,cAAC,EAAD,CACE3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,IACPvB,mBAlBH4B,KAAKC,MAAOjC,EAAO2B,IAAwB,KAAO,MAqBjD,cAAC,EAAD,CAAcN,QAAQ,8B,MChDlCa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.61b952c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Feedback_section__16Sal\",\"container\":\"Feedback_container__2ZW2-\",\"title\":\"Feedback_title__3LyBv\",\"button\":\"Feedback_button__3JzbQ\",\"message\":\"Feedback_message__22GN4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"liItem\":\"Statistics_liItem__1mDkx\"};","import PropTypes from 'prop-types';\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage\r\n}) => {\r\n  return (\r\n      <div>\r\n        <ul>\r\n          <li className={styles.liItem}>Good: {good}</li>\r\n          <li className={styles.liItem}>Neutral: {neutral}</li>\r\n          <li className={styles.liItem}>Bad: {bad}</li>\r\n          <li className={styles.liItem}>Total: {total}</li>\r\n          <li className={styles.liItem}>Positive feedback: {positivePercentage}</li>\r\n        </ul>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n  total: PropTypes.number.isRequired\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport styles from \"./Feedback.module.css\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, name}) => {\r\n    return (\r\n      <div>\r\n        {name.map((itemName, id) => (\r\n          <button key={id} type=\"button\" onClick={() => onLeaveFeedback(itemName)} className={styles.button}>\r\n            {itemName}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    )\r\n}\r\n  \r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  name: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired\r\n}","import PropTypes from 'prop-types';\r\nimport styles from \"../Feedback/Feedback.module.css\";\r\n\r\nconst Title = ({ title, children }) => {\r\n    return (\r\n        <div>\r\n        <h2 className={styles.title}>{title}</h2>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title;\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}","import PropTypes from 'prop-types';\r\nimport styles from \"../Feedback/Feedback.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p className={styles.message}>{message}</p>\r\n    )\r\n}\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n}","import Statistics from \"../components/Statistics/Statistics\";\nimport React from \"react\";\nimport FeedbackOptions from \"../components/Feedback/FeedbackOptions\";\nimport Title from \"../components/Title/Title\";\nimport Notification from \"../components/Notification/Notification\";\nimport styles from \"../components/Feedback/Feedback.module.css\";\nimport { useState } from \"react\";\n\nexport const App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const state = [\"good\", \"neutral\", \"bad\"];\n\n  const buttonFeedback = (event) => {\n    switch (event) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return Math.floor((good / countTotalFeedback()) * 100) + \"%\";\n  };\n  return (\n    <section className={styles.section}>\n      <div className={styles.container}>\n        <Title title=\"PLease leave feedback\">\n          <FeedbackOptions\n            onLeaveFeedback={buttonFeedback}\n            name={state}\n          ></FeedbackOptions>\n        </Title>\n        <Title title=\"Statistics\">\n          {countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Title>\n      </div>\n    </section>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport \"./reset.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}